buildscript {
    repositories {
        maven { url "https://maven.fabricmc.net/" }
        maven { url "https://maven.architectury.dev/" }
        maven { url "https://maven.minecraftforge.net/" }
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath group: 'architectury-plugin', name: 'architectury-plugin.gradle.plugin', version: '3.4-SNAPSHOT', changing: true
        classpath group: 'dev.architectury', name: 'architectury-loom', version: '1.4-SNAPSHOT', changing: true
    }
}
import org.apache.tools.ant.filters.ReplaceTokens
apply plugin: 'architectury-plugin'

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        //silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        // mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:1.18.2+build.4:v2"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    tasks.withType(AbstractArchiveTask) {
        preserveFileTimestamps = false
        reproducibleFileOrder = true
    }

    java {
        withSourcesJar()
    }

    // https://stackoverflow.com/a/54094378
    task processSource(type: Sync) {
        from sourceSets.main.java
        if (project.hasProperty('keyStore')) {
            filter(ReplaceTokens, tokens: [signature: project.findProperty('signSHA256')])
        }
        into "$buildDir/src"
    }
}
